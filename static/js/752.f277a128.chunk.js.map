{"version":3,"file":"static/js/752.f277a128.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9p-+f\",\"mainPhoto\":\"ProfileInfo_mainPhoto__TqtAF\",\"contact\":\"ProfileInfo_contact__ApF5j\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const[editMode,setEditMode]=useState(false);\r\n    const[status, setStatus]=useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    const activateEditMode=()=>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode=()=>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Input, Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {<Field placeholder={\"Full name\"} name={\"fullName\"} validate={[]} component={Input}/>}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {<Field placeholder={\"\"} name={\"lookingForAJob\"} validate={[]} component={Input}\r\n                                              type={\"checkbox\"}/>}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {<Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"} validate={[]}\r\n                    component={Textarea}/>}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {<Field placeholder={\"About me\"} name={\"aboutMe\"} validate={[]} component={Textarea}/>}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {<Field placeholder={key} name={\"contacts.\" + key} validate={[]} component={Input}/>}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n\r\n","import s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/image/user_logo.png\"\nimport {useState} from \"react\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>;\n    }\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div>\n            <div>\n                <img\n                    src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\"/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\n                {editMode\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                    : <ProfileData goToEditMode={() => {\n                        setEditMode(true)\n                    }} profile={profile} isOwner={isOwner}/>\n                }\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    );\n};\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        {isOwner && <div>\n            <button onClick={goToEditMode}>edit</button>\n        </div>}\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n        }\n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        })}\n        </div>\n    </div>\n}\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__B8Qg5\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__xfA0u\"};","import s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://i.pinimg.com/originals/01/c7/b1/01c7b181419e15cc614b2297a0e0b959.jpg\" />\n      {props.message}\n      <div>\n        <span>{props.likesCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import s from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength10=maxLengthCreator(10)\nconst AddNewPostForm=(props)=>{\n  return <form onSubmit={props.handleSubmit}>\n    <div>\n      <Field component={Textarea} name={\"newPostText\"} validate={[required,maxLength10]} placeholder={\"Post message\"} />\n    </div>\n    <div>\n      <button>Add post</button>\n    </div>\n  </form>;\n}\nconst AddNewPostFormRedux=reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n  //console.log(\"Render\");\n  let postsElements = [...props.posts].reverse().map((p) => (\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\n  ));\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n  return (\n    <div className={s.postsBlock}>\n      <h3>MyPosts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import React from \"react\";\nimport {\n  addPostActionCreator,\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} saveProfile={props.saveProfile} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, {useEffect} from \"react\";\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport {withRedirectAuth} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n    const { userId } = useParams();\n    const refreshProfile = () => {\n        let profileUserId = userId || props.authorizedUserId;\n\n        if (!profileUserId) {\n            props.history.push(\"/login\");\n        } else {\n            props.getUserProfile(profileUserId);\n            props.getStatus(profileUserId);\n        }\n    };\n\n    useEffect(() => {\n        refreshProfile();\n    }, [userId, props.authorizedUserId]);\n\n    // console.log(\"RENDER PROFILE\");\n    return (\n        <Profile\n            {...props}\n            isOwner={!userId}\n            profile={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n            savePhoto={props.savePhoto}\n        />\n    );\n};\n\n/*function ProfileContainer(props) {\n    const refreshProfile=(userId)=>{\n        if(!userId){\n            userId=props.authorizedUserId;\n            if(!userId){\n                props.push(\"/login\");\n            }\n        }\n        props.getUserProfile(userId);\n        props.getStatus(userId);\n    }\n\n    let {userId} = useParams();\n    if (!userId) {\n        userId=props.authorizedUserId;\n    }\n\n    useEffect(() => {\n        refreshProfile(userId);\n        //props.getUserProfile(userId);\n        //props.getStatus(userId);\n    }, [userId]);\n    return (\n        <div>\n            <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n        </div>\n    );\n}*/\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status:state.profilePage.status,\n    authorizedUserId:state.auth.userId,\n    isAuth:state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus,savePhoto,saveProfile}),\n    withRedirectAuth)\n(ProfileContainer);\n\n\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","Field","placeholder","name","validate","component","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileDataForm","initialValues","formData","then","ProfileStatusWithHooks","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","required","React","postsElements","_toConsumableArray","posts","reverse","p","Post","id","postsBlock","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","withRedirectAuth","useParams","profileUserId","history","push","refreshProfile","Profile","_objectSpread"],"sourceRoot":""}